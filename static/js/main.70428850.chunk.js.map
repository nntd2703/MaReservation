{"version":3,"sources":["components/Menu.js","page/Home.js","components/Reservation/index.js","page/Reservation.js","routes.js","App.js","registerServiceWorker.js","index.js"],"names":["menus","name","to","exact","MenuLink","label","activeOnlyWhenExact","path","children","active","match","className","Menu","showMenus","result","length","map","menu","index","key","this","Component","Home","ReservationComponent","Container","Row","Col","md","xs","class","defaultValue","Date","Reservation","routes","main","App","showContentMenu","route","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","Moment","locale","momentLocalizer","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.70428850.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Route, Link } from \"react-router-dom\";\n\nconst menus = [\n  {\n    name: \"Home\",\n    to: \"/\",\n    exact: true\n  },\n  {\n    name: \"Reservation\",\n    to: \"/reservation\",\n    exact: false\n  }\n];\n\n//Custom Link\nconst MenuLink = ({ label, to, activeOnlyWhenExact }) => {\n  return (\n    <Route\n      path={to}\n      exact={activeOnlyWhenExact}\n      children={({ match }) => {\n        //match la doi tuong xac dinh su trung khop cua URL\n        var active = match ? \"active abc\" : \"\";\n\n        return (\n          <li className={`my-li ${active}`}>\n            <Link to={to} className=\"my-link\">\n              {label}\n            </Link>\n          </li>\n        );\n      }}\n    />\n  );\n};\n\nclass Menu extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-default\">\n        <ul className=\"nav navbar-nav\">\n          {/* <li>\n                        <NavLink exact activeStyle={{\n                            backgroundColor : 'white',\n                            color : 'red'\n                        }} to=\"/\" className=\"my-link\">Trang Chu</NavLink>\n                    </li>\n                    <li>\n                        <NavLink activeStyle={{\n                            backgroundColor : 'white',\n                            color : 'red'\n                        }} to=\"/about\" className=\"my-link\">Gioi Thieu</NavLink>\n                    </li>\n                    <li>\n                        <NavLink activeStyle={{\n                            backgroundColor : 'white',\n                            color : 'red'\n                        }} to=\"/contact\" className=\"my-link\">Lien He</NavLink>\n                    </li> */}\n\n          {/* <li>\n                        <NavLink exact activeClassName=\"active\" to=\"/\" className=\"my-link\">Trang Chu</NavLink>\n                    </li>\n                    <li>\n                        <NavLink activeClassName=\"active\" to=\"/about\" className=\"my-link\">Gioi Thieu</NavLink>\n                    </li>\n                    <li>\n                        <NavLink activeClassName=\"active\" to=\"/contact\" className=\"my-link\">Lien He</NavLink>\n                    </li> */}\n\n          {/* <li className=\"active\">\n                        <NavLink exact to=\"/\" className=\"my-link\">Trang Chu</NavLink>\n                    </li>\n                    <li className=\"active\">\n                        <NavLink to=\"/about\" className=\"my-link\">Gioi Thieu</NavLink>\n                    </li>\n                    <li className=\"active\">\n                        <NavLink to=\"/contact\" className=\"my-link\">Lien He</NavLink>\n                    </li> */}\n\n          {/* Custom link */}\n          {this.showMenus(menus)}\n        </ul>\n      </nav>\n    );\n  }\n\n  showMenus = menus => {\n    var result = null;\n\n    if (menus.length > 0) {\n      result = menus.map((menu, index) => {\n        return (\n          <MenuLink\n            key={index}\n            label={menu.name}\n            to={menu.to}\n            activeOnlyWhenExact={menu.exact}\n          />\n        );\n      });\n    }\n\n    return result;\n  };\n}\n\nexport default Menu;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Home extends Component {\n  render() {\n\n    return (\n      <div>\n        <div> Home Page </div>\n        <Link to=\"/reservation\">About</Link>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"./styles.scss\";\nimport { DateTimePicker } from 'react-widgets';\n\nclass ReservationComponent extends Component {\n  render() {\n    return (\n      <div>\n        <Container>\n          <Row>\n            <Col md={6} xs={12}>\n              <div className=\"reservation\">\n                <div class=\"header\">\n                  <span className=\"tit2\">Reservation</span>\n                  <h3 className=\"tit3\"> Book Table </h3>\n                </div>\n                <div className=\"form\">\n                  <DateTimePicker defaultValue={new Date()} />\n                </div>\n              </div>\n            </Col>\n            <Col md={6} xs={12}>\n              <div className=\"image\">Image will be display here</div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default ReservationComponent;\n","import React, { Component } from 'react';\nimport ReservationComponent from '../components/Reservation/index';\n\nclass Reservation extends Component {\n    render() {\n        return (\n            <ReservationComponent/>\n        );\n    }\n}\n\nexport default Reservation;","import React from \"react\";\nimport Home from \"./page/Home\";\nimport Reservation from \"./page/Reservation\";\n\nconst routes = [\n  {\n    path: \"/\",\n    exact: true,\n    main: () => <Home />\n  },\n  {\n    path: \"/reservation\",\n    exact: false,\n    main: () => <Reservation />\n  }\n];\n\nexport default routes;\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Menu from \"./components/Menu\";\nimport routes from './routes';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-widgets/dist/css/react-widgets.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Menu/>\n          <Switch>{this.showContentMenu(routes)}</Switch>\n        </div>\n      </Router>\n    );\n  }\n\n  showContentMenu = routes => {\n    var result = null;\n\n    if (routes.length > 0) {\n      result = routes.map((route, index) => {\n        return (\n          <Route\n            key={index}\n            path={route.path}\n            exact={route.exact}\n            component={route.main}\n          />\n        );\n      });\n    }\n\n    return result;\n  };\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\n            );\n          });\n        } else {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport Moment from 'moment' \nimport momentLocalizer from 'react-widgets-moment'; \n\nMoment.locale('vi')\nmomentLocalizer()\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nregisterServiceWorker();\n\n"],"sourceRoot":""}