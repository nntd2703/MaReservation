{"version":3,"sources":["components/Menu.js","utils.js","components/Reservation/index.js","page/Reservation.js","components/Login/index.js","page/Login.js","page/Home.js","routes.js","App.js","registerServiceWorker.js","index.js"],"names":["menus","name","to","exact","MenuLink","label","activeOnlyWhenExact","path","children","active","match","className","Menu","showMenus","result","length","map","menu","index","key","this","Component","timeOptions","quantityPeople","max","array","i","push","schema","Yup","fullName","required","phoneNumber","username","city","state","zip","terms","ReservationComponent","openDatePicker","currentTime","Date","setMinutes","getMinutes","newArray","forEach","item","hour","parseInt","split","min","getHours","colors","timeDate","getArrayTime","console","log","Container","validationSchema","onSubmit","initialValues","handleSubmit","handleChange","values","handleBlur","errors","touched","isValid","Form","noValidate","Row","Group","as","Col","md","controlId","Label","Control","type","value","onChange","isInvalid","Feedback","data","defaultValue","time","onBlur","open","onFocus","setState","onToggle","disabled","Check","feedback","id","Button","Reservation","LoginForm","Login","Home","routes","main","App","showContentMenu","route","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","Moment","locale","momentLocalizer","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"oTAGMA,EAAQ,CACZ,CACEC,KAAM,OACNC,GAAI,IACJC,OAAO,GAET,CACEF,KAAM,cACNC,GAAI,eACJC,OAAO,IAKLC,EAAW,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,MAAOH,EAA8B,EAA9BA,GAAII,EAA0B,EAA1BA,oBAC7B,OACE,kBAAC,IAAD,CACEC,KAAML,EACNC,MAAOG,EACPE,SAAU,YAAgB,IAEpBC,EAFmB,EAAZC,MAEU,aAAe,GAEpC,OACE,wBAAIC,UAAS,gBAAWF,IACtB,kBAAC,IAAD,CAAMP,GAAIA,EAAIS,UAAU,WACrBN,QAgFAO,E,2MApBbC,UAAY,SAAAb,GACV,IAAIc,EAAS,KAeb,OAbId,EAAMe,OAAS,IACjBD,EAASd,EAAMgB,KAAI,SAACC,EAAMC,GACxB,OACE,kBAAC,EAAD,CACEC,IAAKD,EACLb,MAAOY,EAAKhB,KACZC,GAAIe,EAAKf,GACTI,oBAAqBW,EAAKd,YAM3BW,G,wEAjEP,OACE,yBAAKH,UAAU,yBACb,wBAAIA,UAAU,kBAyCXS,KAAKP,UAAUb,S,GA7CPqB,a,+ECxBbC,EAAc,CAClB,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAGIC,EAAiB,SAACC,GAEtB,IADA,IAAMC,EAAQ,GACLC,EAAI,EAAGA,GAAKF,EAAKE,IACxBD,EAAME,KAAKD,GAE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","file":"static/js/main.ba66bbb4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Route, Link } from \"react-router-dom\";\n\nconst menus = [\n  {\n    name: \"Home\",\n    to: \"/\",\n    exact: true\n  },\n  {\n    name: \"Reservation\",\n    to: \"/reservation\",\n    exact: false\n  }\n];\n\n//Custom Link\nconst MenuLink = ({ label, to, activeOnlyWhenExact }) => {\n  return (\n    <Route\n      path={to}\n      exact={activeOnlyWhenExact}\n      children={({ match }) => {\n        //match la doi tuong xac dinh su trung khop cua URL\n        var active = match ? \"active abc\" : \"\";\n\n        return (\n          <li className={`my-li ${active}`}>\n            <Link to={to} className=\"my-link\">\n              {label}\n            </Link>\n          </li>\n        );\n      }}\n    />\n  );\n};\n\nclass Menu extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-default\">\n        <ul className=\"nav navbar-nav\">\n          {/* <li>\n                        <NavLink exact activeStyle={{\n                            backgroundColor : 'white',\n                            color : 'red'\n                        }} to=\"/\" className=\"my-link\">Trang Chu</NavLink>\n                    </li>\n                    <li>\n                        <NavLink activeStyle={{\n                            backgroundColor : 'white',\n                            color : 'red'\n                        }} to=\"/about\" className=\"my-link\">Gioi Thieu</NavLink>\n                    </li>\n                    <li>\n                        <NavLink activeStyle={{\n                            backgroundColor : 'white',\n                            color : 'red'\n                        }} to=\"/contact\" className=\"my-link\">Lien He</NavLink>\n                    </li> */}\n\n          {/* <li>\n                        <NavLink exact activeClassName=\"active\" to=\"/\" className=\"my-link\">Trang Chu</NavLink>\n                    </li>\n                    <li>\n                        <NavLink activeClassName=\"active\" to=\"/about\" className=\"my-link\">Gioi Thieu</NavLink>\n                    </li>\n                    <li>\n                        <NavLink activeClassName=\"active\" to=\"/contact\" className=\"my-link\">Lien He</NavLink>\n                    </li> */}\n\n          {/* <li className=\"active\">\n                        <NavLink exact to=\"/\" className=\"my-link\">Trang Chu</NavLink>\n                    </li>\n                    <li className=\"active\">\n                        <NavLink to=\"/about\" className=\"my-link\">Gioi Thieu</NavLink>\n                    </li>\n                    <li className=\"active\">\n                        <NavLink to=\"/contact\" className=\"my-link\">Lien He</NavLink>\n                    </li> */}\n\n          {/* Custom link */}\n          {this.showMenus(menus)}\n        </ul>\n      </nav>\n    );\n  }\n\n  showMenus = menus => {\n    var result = null;\n\n    if (menus.length > 0) {\n      result = menus.map((menu, index) => {\n        return (\n          <MenuLink\n            key={index}\n            label={menu.name}\n            to={menu.to}\n            activeOnlyWhenExact={menu.exact}\n          />\n        );\n      });\n    }\n\n    return result;\n  };\n}\n\nexport default Menu;\n","/* \ngetQuarterHour() {\n    const quarterHours = [\"00\", \"15\", \"30\", \"45\"];\n    let times = [];\n    for (let i = 0; i < 24; i++) {\n      for (let j = 0; j < 4; j++) {\n        times.push(i + \":\" + quarterHours[j]);\n      }\n    }\n    return times;\n  }\n\n*/\n\nconst timeOptions = [\n  \"00:00\",\n  \"00:15\",\n  \"00:30\",\n  \"00:45\",\n  \"01:00\",\n  \"01:15\",\n  \"01:30\",\n  \"01:45\",\n  \"02:00\",\n  \"02:15\",\n  \"02:30\",\n  \"02:45\",\n  \"03:00\",\n  \"03:15\",\n  \"03:30\",\n  \"03:45\",\n  \"04:00\",\n  \"04:15\",\n  \"04:30\",\n  \"04:45\",\n  \"05:00\",\n  \"05:15\",\n  \"05:30\",\n  \"05:45\",\n  \"06:00\",\n  \"06:15\",\n  \"06:30\",\n  \"06:45\",\n  \"07:00\",\n  \"07:15\",\n  \"07:30\",\n  \"07:45\",\n  \"08:00\",\n  \"08:15\",\n  \"08:30\",\n  \"08:45\",\n  \"09:00\",\n  \"09:15\",\n  \"09:30\",\n  \"09:45\",\n  \"10:00\",\n  \"10:15\",\n  \"10:30\",\n  \"10:45\",\n  \"11:00\",\n  \"11:15\",\n  \"11:30\",\n  \"11:45\",\n  \"12:00\",\n  \"12:15\",\n  \"12:30\",\n  \"12:45\",\n  \"13:00\",\n  \"13:15\",\n  \"13:30\",\n  \"13:45\",\n  \"14:00\",\n  \"14:15\",\n  \"14:30\",\n  \"14:45\",\n  \"15:00\",\n  \"15:15\",\n  \"15:30\",\n  \"15:45\",\n  \"16:00\",\n  \"16:15\",\n  \"16:30\",\n  \"16:45\",\n  \"17:00\",\n  \"17:15\",\n  \"17:30\",\n  \"17:45\",\n  \"18:00\",\n  \"18:15\",\n  \"18:30\",\n  \"18:45\",\n  \"19:00\",\n  \"19:15\",\n  \"19:30\",\n  \"19:45\",\n  \"20:00\",\n  \"20:15\",\n  \"20:30\",\n  \"20:45\",\n  \"21:00\",\n  \"21:15\",\n  \"21:30\",\n  \"21:45\",\n  \"22:00\",\n  \"22:15\",\n  \"22:30\",\n  \"22:45\",\n  \"23:00\",\n  \"23:15\",\n  \"23:30\",\n  \"23:45\"\n];\n\nconst quantityPeople = (max) => {\n  const array = [];\n  for (let i = 1; i <= max; i++) {\n    array.push(i);\n  }\n  return array;\n};\n\nexport { timeOptions, quantityPeople };\n","import React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Form, Button, Col, Container } from \"react-bootstrap\";\nimport { DateTimePicker } from \"react-widgets\";\nimport ComboBox from \"react-widgets/lib/Combobox\";\nimport { timeOptions, quantityPeople } from \"../../utils\";\n\nconst schema = Yup.object({\n  fullName: Yup.string().required(),\n  phoneNumber: Yup.string().required(),\n  username: Yup.string().required(),\n  city: Yup.string().required(),\n  state: Yup.string().required(),\n  zip: Yup.string().required(),\n  terms: Yup.bool().required()\n});\n\nclass ReservationComponent extends Component {\n  constructor() {\n    super();\n    this.state = {\n      openDatePicker: false\n    };\n  }\n\n  getArrayTime() {\n    const currentTime = new Date();\n    currentTime.setMinutes(currentTime.getMinutes() + 45);\n    const newArray = [];\n    timeOptions.forEach(item => {\n      const hour = parseInt(item.split(\":\")[0]);\n      const min = parseInt(item.split(\":\")[1]);\n      if (parseInt(currentTime.getHours()) === hour) {\n        if (parseInt(currentTime.getMinutes()) <= min) {\n          newArray.push(item);\n        }\n      } else if (parseInt(currentTime.getHours()) < hour) {\n        newArray.push(item);\n      }\n    });\n    return newArray;\n  }\n\n  render() {\n    const { openDatePicker } = this.state;\n\n    let colors = [\"orange\", \"red\", \"blue\", \"purple\"];\n\n    const timeDate = this.getArrayTime();\n\n    console.log(quantityPeople(12))\n\n    return (\n      <Container>\n        <Formik\n          validationSchema={schema}\n          onSubmit={console.log}\n          initialValues={{\n            fullName: \"\",\n            phoneNumber: \"\"\n          }}\n        >\n          {({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            touched,\n            isValid,\n            errors\n          }) => (\n            <Form noValidate onSubmit={handleSubmit}>\n              <Form.Row>\n                <Form.Group as={Col} md=\"4\" controlId=\"validationFormik01\">\n                  <Form.Label>First name</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"fullName\"\n                    value={values.fullName}\n                    onChange={handleChange}\n                    isInvalid={!!errors.fullName}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.fullName}\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group as={Col} md=\"4\" controlId=\"validationFormik02\">\n                  <Form.Label>Phone Number</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"phoneNumber\"\n                    value={values.phoneNumber}\n                    onChange={handleChange}\n                    isInvalid={!!errors.phoneNumber}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.phoneNumber}\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group\n                  as={Col}\n                  md=\"4\"\n                  controlId=\"validationFormikUsername\"\n                >\n                  <Form.Label>People</Form.Label>\n                  <ComboBox\n                    data={quantityPeople(12)}\n                    defaultValue={quantityPeople(12)[0]}\n                  ></ComboBox>\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group as={Col} md=\"4\" controlId=\"validationFormik03\">\n                  <Form.Label>Date</Form.Label>\n                  <DateTimePicker\n                    defaultValue={new Date()}\n                    min={new Date()}\n                    time={false}\n                    onBlur={() => {}}\n                    open={openDatePicker ? \"date\" : false}\n                    onFocus={() => {\n                      this.setState({ openDatePicker: true });\n                    }}\n                    onToggle={() => {\n                      this.setState({ openDatePicker: !openDatePicker });\n                    }}\n                  />\n                </Form.Group>\n                <Form.Group as={Col} md=\"4\" controlId=\"validationFormik04\">\n                  <Form.Label>Time</Form.Label>\n                  <ComboBox\n                    data={timeDate}\n                    defaultValue={timeDate[0]}\n                  ></ComboBox>\n                </Form.Group>\n                <Form.Group as={Col} md=\"4\" controlId=\"validationFormik05\">\n                  <Form.Label>Private room</Form.Label>\n                  <ComboBox disabled data={colors}></ComboBox>\n                </Form.Group>\n              </Form.Row>\n              <Form.Group>\n                <Form.Check\n                  required\n                  name=\"terms\"\n                  label=\"Agree to terms and conditions\"\n                  onChange={handleChange}\n                  isInvalid={!!errors.terms}\n                  feedback={errors.terms}\n                  id=\"validationFormik0\"\n                />\n              </Form.Group>\n              <Button type=\"submit\">Submit form</Button>\n            </Form>\n          )}\n        </Formik>\n      </Container>\n    );\n  }\n}\n\nexport default ReservationComponent;\n","import React, { Component } from \"react\";\nimport ReservationComponent from \"../components/Reservation/index\";\n\nclass Reservation extends Component {\n  render() {\n    return <ReservationComponent />;\n  }\n}\n\nexport default Reservation;\n","import React, { Component } from \"react\";\n\nclass LoginForm extends Component {\n  render() {\n    return <div></div>;\n  }\n}\n\nexport default LoginForm;\n","import React, { Component } from \"react\";\nimport LoginForm from \"../components/Login\";\n\nclass Login extends Component {\n  render() {\n    return <LoginForm />;\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <div> Home Page </div>\n        <Link to=\"/reservation\">About</Link>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport Reservation from \"./page/Reservation\";\nimport Login from \"./page/Login\";\nimport Home from \"./page/Home\";\n\nconst routes = [\n  {\n    path: \"/\",\n    exact: true,\n    main: () => <Home />\n  },\n  {\n    path: \"/employee\",\n    exact: true,\n    main: () => <Login />\n  },\n  {\n    path: \"/reservation\",\n    exact: false,\n    main: () => <Reservation />\n  }\n];\n\nexport default routes;\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Menu from \"./components/Menu\";\nimport routes from './routes';\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Menu/>\n          <Switch>{this.showContentMenu(routes)}</Switch>\n        </div>\n      </Router>\n    );\n  }\n\n  showContentMenu = routes => {\n    var result = null;\n\n    if (routes.length > 0) {\n      result = routes.map((route, index) => {\n        return (\n          <Route\n            key={index}\n            path={route.path}\n            exact={route.exact}\n            component={route.main}\n          />\n        );\n      });\n    }\n\n    return result;\n  };\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\n            );\n          });\n        } else {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport Moment from \"moment\";\nimport \"moment/locale/vi\";\nimport momentLocalizer from \"react-widgets-moment\";\n\nMoment.locale(\"en\");\nmomentLocalizer();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nregisterServiceWorker();\n"],"sourceRoot":""}